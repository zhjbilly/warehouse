<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qizhi.warehouse.dao.GoodsBatchMapper">
  <resultMap id="BaseResultMap" type="com.qizhi.warehouse.domain.GoodsBatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
    <result column="shelf_position" jdbcType="INTEGER" property="shelfPosition" />
    <result column="in_amount" jdbcType="INTEGER" property="inAmount" />
    <result column="out_amount" jdbcType="INTEGER" property="outAmount" />
    <result column="locked_amount" jdbcType="INTEGER" property="lockedAmount" />
    <result column="inward_date" jdbcType="TIMESTAMP" property="inwardDate" />
    <result column="receipt_id" jdbcType="INTEGER" property="receiptId" />
  </resultMap>
  <resultMap id="warehouseMap" type="com.qizhi.warehouse.domain.Warehouse">
    <id column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
    <result column="warehouse_type" jdbcType="VARCHAR" property="warehouseType" />
    <result column="location_x" jdbcType="INTEGER" property="locationX" />
    <result column="location_y" jdbcType="INTEGER" property="locationY" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_name, warehouse_id, shelf_position, in_amount, out_amount, locked_amount, 
    inward_date, receipt_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_batch
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_batch
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qizhi.warehouse.domain.GoodsBatch">
    insert into goods_batch (id, goods_name, warehouse_id, 
      shelf_position, in_amount, out_amount, 
      locked_amount, inward_date, receipt_id
      )
    values (#{id,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{warehouseId,jdbcType=INTEGER}, 
      #{shelfPosition,jdbcType=INTEGER}, #{inAmount,jdbcType=INTEGER}, #{outAmount,jdbcType=INTEGER}, 
      #{lockedAmount,jdbcType=INTEGER}, #{inwardDate,jdbcType=TIMESTAMP}, #{receiptId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qizhi.warehouse.domain.GoodsBatch">
    update goods_batch
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="shelfPosition != null">
        shelf_position = #{shelfPosition,jdbcType=INTEGER},
      </if>
      <if test="inAmount != null">
        in_amount = #{inAmount,jdbcType=INTEGER},
      </if>
      <if test="outAmount != null">
        out_amount = #{outAmount,jdbcType=INTEGER},
      </if>
      <if test="lockedAmount != null">
        locked_amount = #{lockedAmount,jdbcType=INTEGER},
      </if>
      <if test="inwardDate != null">
        inward_date = #{inwardDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiptId != null">
        receipt_id = #{receiptId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qizhi.warehouse.domain.GoodsBatch">
    update goods_batch
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      shelf_position = #{shelfPosition,jdbcType=INTEGER},
      in_amount = #{inAmount,jdbcType=INTEGER},
      out_amount = #{outAmount,jdbcType=INTEGER},
      locked_amount = #{lockedAmount,jdbcType=INTEGER},
      inward_date = #{inwardDate,jdbcType=TIMESTAMP},
      receipt_id = #{receiptId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!---->
  <select id="selectByReceiptIdAndName" resultMap="BaseResultMap">
    select * from goods_batch where receipt_id = #{receiptId} and goods_name = #{name}
  </select>
  <select id="selectLastShelf" resultType="java.lang.Integer">
    select COALESCE(MAX(shelf_position),0)  from goods_batch
  </select>
  <select id="selectByWareAndName" resultMap="BaseResultMap">
    select * from goods_batch where warehouse_id = #{warehouseId} and goods_name = #{name}
  </select>
  <select id="selectByWareAndNameLike" resultMap="BaseResultMap">
    select * from goods_batch where warehouse_id = #{warehouseId} and goods_name like concat('%', #{name}, '%')
  </select>
  <select id="selectByWareAndShelf" resultMap="BaseResultMap">
    select * from goods_batch where warehouse_id = #{warehouseId} and shelf_position = #{shelf}
  </select>
  <select id="selectByReceiptId" resultMap="BaseResultMap">
    select * from goods_batch where  receipt_id = #{receiptId}
  </select>
  <select id="selectHasBatch" resultMap="BaseResultMap">
    select * from goods_batch where warehouse_id = #{warehouseId} and in_amount - locked_amount > 0
  </select>
  <select id="selectWarehouseIdByCond" resultMap="warehouseMap">
    select w.* from goods_batch b
    left join warehouse w on b.warehouse_id = w.warehouse_id
    where b.goods_name = #{goodsName} and b.in_amount - b.locked_amount > #{amount} and w.warehouse_type == 'FRONT'
  </select>
  <select id="selectByWarehouseId" resultMap="BaseResultMap">
    select * from goods_batch where warehouse_id = #{warehouseId} and goods_name = #{goodsName} and in_amount - lock_amount > 0 order by inward_date
  </select>
  <update id="updateLocked">
    update goods_batch set locked_amount == 0
    where warehouse_id = #{warehouseId} locked_amount != 0
  </update>
</mapper>